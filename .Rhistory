X.table <- as.data.frame(X %>% group_by(location) %>% summarize(n.mantas=n(),mean=round(mean(length),2),var=round(var(length),2),max=round(max(length),2),min=round(min(length),2),n.dead=sum(dead)) %>% mutate(perc.dead=round(n.dead/n.mantas,2)))
print(X.table)
boxplot(length ~ location, data=X, xlab="Location", ylab="Length (m)")
aov1 <- lm(length ~ location, data=X)
aov1
summary(aov1)
aov1 <- aov(length ~ location, data=X)
summary(aov1)
plot(aov1)
layout(matrix(c(1,2,3,4),2,2)) # optional layout
plot(fit) # diagnostic plots
plot(aov1)
leveneTest(aov1)
??leveneTest
TukeyHSD(aov1)
boxplot(length ~ location, data=X, xlab="Location", ylab="Length (m)")
boxplot(length ~ location, data=X, xlab="Location", ylab="Length (m)")
write.csv(X,"/home/brian/Documents/Workshops/Mexico fisheries/StatsClass/problem15.csv",row.names=FALSE)
shapiro.test(X$length)
bartlett.test(length ~ location, data=X)
par(def.par)
layout(matrix(1))
boxplot(length ~ location, data=X, xlab="Location", ylab="Length (m)")
plot(aov1)
print(X.table)
summary(aov1)
TukeyHSD(aov1)
?rnorm
?Distributions
?distributions
knitr::opts_chunk$set(echo = TRUE)
?distributions
?normal
?Normal
x <- seq(-20,20,by=.1)
y <- dnorm(x,mean=2.5,sd=0.1)
print(y)
plot(x,y)
x <- seq(-20,20,by=.1)
y <- dnorm(x,mean=2.5,sd=1)
print(y)
plot(x,y)
x <- seq(-20,20,by=.1)
y <- dnorm(x,mean=5,sd=1)
print(y)
plot(x,y)
x <- seq(-1,10,by=.1)
y <- dnorm(x,mean=5,sd=1)
print(y)
plot(x,y)
x <- seq(-1,10,by=.1)
y <- dnorm(x,mean=5,sd=1)
print(y)
plot(x,y,type='b')
?plot
x <- seq(-1,10,by=.1)
y <- dnorm(x,mean=5,sd=1)
print(y)
plot(x,y,type="b")
x <- seq(-1,10,by=.1)
y <- dnorm(x,mean=5,sd=1)
print(y)
plot(x,y,type="l")
x <- seq(-1,10,by=.1)
y <- dnorm(x,mean=5,sd=1)
print(y)
plot(x,y,type="p")
x <- seq(-1,10,by=.1)
y <- dnorm(x,mean=5,sd=1)
print(y)
plot(x,y,type="b")
x <- seq(-1,10,by=.1)
y <- dnorm(x,mean=5,sd=1)
print(y)
plot(x,y,type="b")
?plot
x <- seq(-1,10,by=.1)
y <- dnorm(x,mean=5,sd=1)
print(y)
plot(x,y,type="o")
x <- seq(-1,10,by=.1)
y <- dnorm(x,mean=5,sd=1)
print(y)
plot(x,y,type="o")
x <- seq(-1,10,by=.1)
y <- dnorm(x,mean=5,sd=1)
print(y)
plot(x,y,type="b")
x <- seq(-1,10,by=1)
y <- dnorm(x,mean=5,sd=1)
print(y)
plot(x,y,type="b")
x <- seq(-1,10,by=0.2)
y <- dnorm(x,mean=5,sd=1)
print(y)
plot(x,y,type="b")
?pnorm
?pnorm
1-0.01786442
qnorm(0.9821356, mean=1.05, sd=0.2)
x <- seq(0.5, 1.7, by = .05)
dvalues <- dnorm(x, mean=1.05, sd=0.2)
plot(x,dvalues,
type = "l",
main = "Lynn's white sea bass lengths",
xlab= "Length (m)",
ylab= "Density")
knitr::opts_chunk$set(echo = TRUE)
x <- seq(0.5, 1.7, by = .01)
dvalues <- dnorm(x, mean=1.05, sd=0.2)
plot(x,dvalues,
type = "l",
main = "Lynn's white sea bass lengths",
xlab= "Length (m)",
ylab= "Density")
?lines
plot(x,dvalues,
type = "l",
main = "Lynn's white sea bass lengths",
xlab= "Length (m)",
ylab= "Density")
abline(v=1.47,col='red')
x <- seq(0.4, 1.7, by = .01)
dvalues <- dnorm(x, mean=1.05, sd=0.2)
plot(x,dvalues,
type = "l",
main = "Lynn's white sea bass lengths",
xlab= "Length (m)",
ylab= "Density")
abline(v=1.47,col='red')
?abline
x <- seq(0.4, 1.7, by = .01)
dvalues <- dnorm(x, mean=1.05, sd=0.2)
plot(x,dvalues,
type = "l",
main = "Lynn's white sea bass lengths",
xlab= "Length (m)",
ylab= "Density")
abline(v=1.47,col='red',lwd=2)
x <- seq(0.4, 1.7, by = .01)
dvalues <- dnorm(x, mean=1.05, sd=0.2)
plot(x,dvalues,
type = "l",
main = "Lynn's white sea bass lengths",
xlab= "Length (m)",
ylab= "Density")
abline(v=1.47,col='red',lwd=4)
lengths <- rnorm(1000, mean=1.05, sd=0.2)
summary(lengths)
len <- rnorm(1000, mean=1.05, sd=0.2)
summary(len)
mean(len)
# Check that the sd is about 0.2
sd(len)
length(len)
hist(len)
hist(len, xlab="Length (m)",main="1000 random fish lengths")
hist(len, breaks=12,xlab="Length (m)",main="1000 random fish lengths")
?distributions
?runif
x <- runif(10000, min=1, max = 3)
hist(x)
x <- runif(10000, min=1, max = 3)
hist(x)
?rbinom
x <- rbinom(10000,50,prob=0.5)
hist(x)
rbinom(1,50,prob=0.5)
x <- rbinom(1,1000,prob=0.5)
hist(x)
x <- rbinom(5,5,prob=0.15)
hist(x)
x <- rbinom(10000,5,prob=0.15)
hist(x)
x <- rbinom(10000,10,prob=0.15)
hist(x)
x <- rbinom(100,10,prob=0.15)
hist(x)
hist(x,breaks=20)
x <- rbinom(100,20,prob=0.15)
hist(x)
x <- rbinom(100,50,prob=0.15)
hist(x)
x <- rbinom(100,30,prob=0.15)
hist(x)
?rbinom
pbinom(9,30,prob=.15)
x <- rbinom(100,30,prob=0.15)
hist(x)
pbinom(8,30,prob=.15)
pbinom(7,30,prob=.15)
pbinom(6,30,prob=.15)
x <- rbinom(100000,100,prob=0.15)
hist(x)
x <- rbinom(100000,100,prob=0.4)
hist(x)
pbinom(29,100,prob=0.4)
pbinom(10,35,0.4)
?pbinom
pbinom(10,size=35,prob=0.4)
pbinom(20,size=35,prob=0.4,lower.tail=FALSE)
pbinom(20,size=35,prob=0.4)
?multinom
8+11+32+19+18
dmultinom(c(8, 11, 32, 19, 18, 12),prob=c(.1, .1, .35, .2, .15, .1))
dmultinom(c(8, 11, 32, 19, 18, 12),prob=c(.1, .1, .35, .2, .15, .1))
?rpois
rpois(1,lambda=8)
hist(rpois(1000,lambda=8))
?dpois
x <- 0:20
dvals <- dpois(x,lambda=8)
plot(x,dvals,type='l')
?dpois
ppois(5,lambda=8)
ppois(5,lambda=8,lower.tail=FALSE)
plot(x,dvals,type='l')
abline(v=5,col='red',lwd=4)
hist(runif(10000,1,5), main="", xlab="")
hist(c(rnorm(10000,0,1),rnorm(10000,10,8)), main="", xlab="")
hist(rpois(10000,3), main="", xlab="")
hist(c(rgamma(10000,3,2),runif(1000,3,8)), main="", xlab="")
hist(c(rbinom(1000,10,.9)), main="", xlab="")
hist(c(rnorm(10000,0,1),rnorm(10000,10,8)), main="", xlab="")
?qqnorm
x <- rnorm(1000)
qqnorm(x)
qqline()
qqline(x)
qqline(x)
qqnorm(x)
qqline(x)
hist(rpois(10000,3), main="", xlab="")
y <- rpois(10000,3)
# Show histogram
hist(y)
head(sort(y))
tail(sort(y))
y.sorted <- sort(y)
head(sort(y))
tail(sort(y))
N <- 10000
y <- rpois(N,3)
y.sorted <- sort(y)
head(sort(y.sorted))
tail(sort(y.sorted))
rand <- rnorm(N)
rand.sorted <- sort(rand)
plot(rand.sorted,y.sorted)
y <- c(rnorm(10000,0,1),rnorm(10000,10,8))
N <- length(y)
# Show histogram
hist(y)
y.sorted <- sort(y)
head(sort(y.sorted))
tail(sort(y.sorted))
rand <- rnorm(N)
rand.sorted <- sort(rand)
plot(rand.sorted,y.sorted)
qqnorm(y)
?qqline
quantile(y,.25)
q1 <- c(quantile(y,.25),quantile(rand,.25))
q3 <- c(quantile(y,.75),quantile(rand,.75))
q1
q3
qy <- quantile(y,c(.25,.75))
qrand <- quantile(rand,c(.25,.75))
qy
qrand
plot(rand.sorted,y.sorted)
lines(qrand,qy)
abline(qrand,qy)
plot(rand.sorted,y.sorted)
abline(lm(qy~qrand))
qqnorm(y)
qqline()
qqline(y)
shapiro.test(y)
y <- c(rnorm(1000,0,1),rnorm(1000,10,8))
shapiro.test(y)
library(FSAdata)
library(dplyr)
dat <- filter(WalleyeErie2,year==2014)
head(dat)
summary(dat)
summary(dat$tl) # tl = total length
summary(dat$tl) # tl = total length
summary(dat$w) # w = weight
15*25
35*25
20/2.2
?residPlot
mod1 <- lm(w~tl,data=dat)
FSA::residPlot(mod1)
plot(mod1)
plot(mod1, which=1)
dat$logW <- log(dat$w)
dat$logL <- log(dat$tl)
plot(logW ~ logL, data=dat, pch=19,col="black",xlab="log Total Length (mm)",ylab="log Weight (g)")
par(mfrow = c(2,2), mar=c(2, 4, 1, 1) + 0.1)
plot(w~tl,data=dat,pch=19,col="black",xlab="Total Length (mm)",ylab="Weight (g)")
plot(mod1, which=1)
plot(logW ~ logL, data=dat, pch=19,col="black",xlab="log Total Length (mm)",ylab="log Weight (g)")
mod2 <- lm(logW ~ logL,data=dat)
plot(mod2, which=1)
par(mfrow = c(2,2), mar=c(3, 4, 1, 1) + 0.1)
plot(w~tl,data=dat,pch=19,col="black",xlab="Total Length (mm)",ylab="Weight (g)")
plot(mod1, which=1)
plot(logW ~ logL, data=dat, pch=19,col="black",xlab="log Total Length (mm)",ylab="log Weight (g)")
mod2 <- lm(logW ~ logL,data=dat)
plot(mod2, which=1)
par(mfrow = c(2,2), mar=c(6, 4, 1, 1) + 0.1)
plot(w~tl,data=dat,pch=19,col="black",xlab="Total Length (mm)",ylab="Weight (g)")
plot(mod1, which=1)
plot(logW ~ logL, data=dat, pch=19,col="black",xlab="log Total Length (mm)",ylab="log Weight (g)")
mod2 <- lm(logW ~ logL,data=dat)
plot(mod2, which=1)
par(mfrow = c(2,2), mar=c(4, 4, 1, 1) + 0.1)
plot(w~tl,data=dat,pch=19,col="black",xlab="Total Length (mm)",ylab="Weight (g)")
plot(mod1, which=1)
plot(logW ~ logL, data=dat, pch=19,col="black",xlab="log Total Length (mm)",ylab="log Weight (g)")
mod2 <- lm(logW ~ logL,data=dat)
plot(mod2, which=1)
par(mfrow = c(2,2), mar=c(4, 4, 0, 1) + 0.1)
plot(w~tl,data=dat,pch=19,col="black",xlab="Total Length (mm)",ylab="Weight (g)")
plot(mod1, which=1)
plot(logW ~ logL, data=dat, pch=19,col="black",xlab="log Total Length (mm)",ylab="log Weight (g)")
mod2 <- lm(logW ~ logL,data=dat)
plot(mod2, which=1)
par(mfrow = c(2,2), mar=c(4, 4, 0, 1) + 0.1)
plot(w~tl,data=dat,pch=19,col="black",xlab="Total Length (mm)",ylab="Weight (g)")
plot(mod1, which=1,main="")
plot(logW ~ logL, data=dat, pch=19,col="black",xlab="log Total Length (mm)",ylab="log Weight (g)")
mod2 <- lm(logW ~ logL,data=dat)
plot(mod2, which=1,main="")
summary(mod2)
cbind(ests=coef(mod2),confint(mod2))
(p1 <- predict(mod2,data.frame(loglen=log(500)),interval="confidence"))
exp(p1)
(p2 <- predict(mod2,data.frame(loglen=log(c(500))),interval="prediction"))
exp(p2)
(p1 <- predict(mod2,data.frame(logL=log(500)),interval="confidence"))
exp(p1)
(p2 <- predict(mod2,data.frame(logL=log(c(500))),interval="prediction"))
exp(p2)
?predict
log(500)
(p1 <- predict(mod2,data.frame(logL=log(500)),interval="confidence"))
exp(p1)
(p2 <- predict(mod2,data.frame(logL=log(500)),interval="prediction"))
exp(p2)
?headtail
L <- seq(240,760,length.out=199)
W <- exp(predict(mod2,data.frame(logL=log(L)),interval="prediction"))
head(W)
tail(W)
plot(w ~ tl, data=dat, pch=19,col="black",xlab="Total Length (mm)",ylab="Weight (g)")
lines(L,W[,"fit"],lwd=2,col="blue")
lines(L,W[,"lwr"],lwd=2,lty=2,col="blue")
lines(L,W[,"upr"],lwd=2,lty=2,col="blue")
plot(w ~ tl, data=dat, pch=19,col="black",xlab="Total Length (mm)",ylab="Weight (g)")
lines(L,W[,"fit"],lwd=2,col="red")
lines(L,W[,"lwr"],lwd=2,lty=2,col="red")
lines(L,W[,"upr"],lwd=2,lty=2,col="red")
mod1 <- lm(w~tl,data=dat)
par(mfrow = c(1,2))
plot(fitted(mod1),residuals(mod1))
plot(mod1, which=1)
?plot
demo("color")
demo("colors")
demo("colors")
colors()
demo("colors")
library(tidyr)
sessionInfo()
library(FSAdata)
?FSAdata
FSAdataTopics
FSAdataTopics("Mortality")
?FSAdata
?FSAdata
help.search("Mortality",package=c("FSAdata"))
dat <- data("Menhaden1")
data("Menhaden1")
Menhaden1
dat <- Menhaden1
library(tidyr)
?gather
gather(dat, key=year)
gather(dat, key=c(year,age))
gather(dat, year, age)
help.search("Mortality",package=c("FSAdata"))
?FSAdata
help.search("Abundance",package=c("FSAdata"))
help.search("Abundance",package=c("FSAdata"))
data("LobsterHI")
dat <- LobsterHI
dat
?gather
gather(dat,key=day, value=catch)
gather(dat,key=stage, value=catch)
gather(dat,key=day, value=catch)
dat <- dat[,c("day","legal","sublegal","berried")]
dat
gather(dat, key=day)
gather(dat, key=day, value=catch)
gather(dat)
gather(dat, key=day, value=catch, -day)
mini_iris <- iris[c(1, 51, 101), ]
mini_iris
gather(mini_iris, key = flower_att, value = measurement,
Sepal.Length, Sepal.Width, Petal.Length, Petal.Width)
gather(dat, key=status, value=catch, -day)
gather(dat, key=status, value=catch)
gather(dat, key=status, value=catch, -day)
library(FSAdata)
library(tidyr)
data("LobsterHI")
dat <- LobsterHI
dat
dat <- gather(dat, key=status, value=catch, -day)
dat
dat <- gather(dat, key=status, value=catch, legal, sublegal, berried)
data("LobsterHI")
dat <- LobsterHI
dat <- gather(dat, key=status, value=catch, legal, sublegal, berried)
dat
data("LobsterHI")
dat <- LobsterHI
dat <- dat[,c("day","legal","sublegal","berried")]
dat <- gather(dat, key=status, value=catch, legal, sublegal, berried)
dat
boxplot(catch ~ status, data=dat)
?LobsterHI
?write.csv
write.csv(dat,"/media/brian/ESD-USB/StatsClass_students/lobsterHI.csv",row.names=FALSE)
?FSAdata
help.search("Weight-Length",package=c("FSAdata","FSA"))
data("SculpinALTER")
dat <- SculpinALTER
dat
boxplot(w ~ age, data=dat)
boxplot(tl ~ age, data=dat)
help.search("Weight-Length",package=c("FSAdata","FSA"))
data("BullTroutRML1")
dat <- BullTroutRML1
dat
boxplot(mass ~ era)
boxplot(mass ~ era, data=dat)
write.csv(dat,"/media/brian/ESD-USB/StatsClass_students/BullTrout.csv",row.names=FALSE)
library(FSAdata)
library(tidyr)
data("LobsterHI")
dat <- LobsterHI
dat <- dat[,c("day","legal","sublegal","berried")]
dat <- gather(dat, key=status, value=catch, legal, sublegal, berried)
write.csv(dat,"/home/brian/Documents/Workshops/Mexico fisheries/StatsClass/lobsterHI.csv",row.names=FALSE)
# Make data for problem 2
data("BullTroutRML1")
dat <- BullTroutRML1
write.csv(dat,"/home/brian/Documents/Workshops/Mexico fisheries/StatsClass/BullTrout.csv",row.names=FALSE)
library(FSAdata)
library(dplyr)
Load walleye length-weight data from FSAdata
dat <- filter(WalleyeErie2,year==2014)
dat
write.csv(dat,"WalleyeErie2.csv")
write.csv(dat,"WalleyeErie2.csv",row.names=FALSE)
getwd()
library(dplyr)
library(multcomp)
setwd("/home/brian/Documents/Workshops/Mexico fisheries/StatsClass")
dat <- read.csv("poissonGLM.csv", header=TRUE)
head(dat)
summary(dat)
names(dat)
dim(dat)
boxplot(counts ~ site, data=dat)
bahia <- filter(dat, site=="bahia")$counts
costa <- filter(dat, site=="costa")$counts
marietas <- filter(dat, site=="marietas")$counts
hist(bahia)
hist(costa)
hist(marietas)
par(mfrow = c(2,2), mar=c(2, 4, 1, 1) + 0.1)
qqnorm(bahia, main="bahia")
qqline(bahia)
qqnorm(costa, main="costa")
qqline(costa)
qqnorm(marietas, main="marietas")
qqline(marietas)
pois.mod <- glm(counts ~ site, data=dat, family=poisson)
summary(pois.mod)
pois.tukey <- glht(pois.mod, mcp(site="Tukey"))
summary(pois.tukey)
newdata <- data.frame(site=c("bahia","costa","marietas"))
newdata <- data.frame(site=c("bahia","costa","marietas"))
newdata <- data.frame(site=c("bahia","costa","marietas"))
newdata
predict(pois.mod, newdata, type="response")
pred <- predict(pois.mod, newdata, type="response", se.fit=TRUE)
pred <- predict(pois.mod, newdata, type="response", se.fit=TRUE)
lwr <- pred$fit - 1.96*pred$se.fit
upr <- pred$fit + 1.96*pred$se.fit
pred$fit
lwr
upr
aov.mod <- aov(counts ~ site, data=dat)
norm.mod <- glm(counts ~ site, data=dat, family=gaussian)
AIC(pois.mod, aov.mod, norm.mod)
